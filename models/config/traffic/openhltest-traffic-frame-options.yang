submodule openhltest-traffic-frame-options {

	yang-version "1.1";
	belongs-to "openhltest" {
		prefix "oht";
	}

	import ietf-yang-types {
		prefix iyt;
	}
	import openhltest-types {
		prefix t;
	}

	grouping traffic-frame-options-group {
        container frame-length {
            leaf length-type {
                type enumeration {
                    enum FIXED;
                    enum INCREMENT;
                    enum DECREMENT;
                    enum RANDOM;
                    enum AUTO;
                    enum IMIX;
                }
            }
            leaf fixed {
                when "../length-type = FIXED";
                description	"Fixed value for frame length";
                type int32;
                default "64";
            }
            container random {
                when "../length-type = RANDOM";
                description "Random frame size options";
                leaf max {
                    type int32;
                }
                leaf min {
                    type int32;
                }
            }
            container increment {
                when "../length-type = INCREMENT";
                leaf start {
                    type int32;
                    default 64;
                    description
                    "Starting increment value for frame length";
                }
                leaf end {
                    type int32;
                    description
                    "Maximum increment value for frame length";
                }
                leaf step {
                    type int32;
                    description
                    "Step increment value for frame length";
                }
            }
            container decrement {
                when "../length-type = DECREMENT";
                leaf start {
                    type int32;
                    default 64;
                    description
                    "Starting increment value for frame length";
                }
                leaf end {
                    type int32;
                    description
                    "Maximum increment value for frame length";
                }
                leaf step {
                    type int32;
                    description
                    "Step increment value for frame length";
                }
            }
            
            container imix {
                leaf imix-type {
                    when "../length-type = IMIX";
                    type enumeration {
                        enum DEFAULT;
                        enum CUSTOM_IMIX;
                    }
                    default "DEFAULT";
                }

                list custom-imix {
                    when "../imix-type = CUSTOM_IMIX";
                    key "name";
                    leaf "name" {
                        type t:config-list-key;
                    } 
                    leaf size {
                        type int32;
                    }
                    leaf weight {
                        type int32;
                    }
                }
            }
        }

        container frame-rate {
            leaf mode {
                type enumeration {
                    enum FIXED;
                    enum INCREMENT;
                    enum DECREMENT;
                    enum SHUFFLE;
                    enum LIST;
                }
                default "FIXED";
            }
            container fixed-rate {
                when "../mode = FIXED";
                leaf rate-type {
                    description
                    "Load unit applied to the stream block.";
                    type enumeration {
                        enum BPS;
                        enum KBPS;
                        enum MPBS;
                        enum FRAMES_PER_SECOND;
                        enum INTER_PACKET_GAP;
                        enum PERCENT_LINE_RATE;
                    }
                }
                leaf bps {
                    when "../rate-type = BPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in bits per second.";
                }
                leaf kbps {
                    when "../rate-type = KBPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in kilo bits per second.";
                }
                leaf mbps {
                    when "../rate-type = MBPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in mega bits per second.";
                }
                leaf fps {
                    when "../rate-type = FRAMES_PER_SECOND";
                    default "1014";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in frames per second.";
                }
                leaf inter-packet-gap {
                    when "../rate-type = INTER_PACKET_GAP";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item inter packet gap.";
                }
                leaf percent-value {
                    when "../rate-type = PERCENT_LINE_RATE";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in percent.";
                }
            }
            container decrement-rate {
                when "../mode = DECREMENT";
                leaf rate-type {
                    description
                    "Load unit applied to the stream block.";
                    type enumeration {
                        enum BPS;
                        enum KBPS;
                        enum MPBS;
                        enum FRAMES_PER_SECOND;
                        enum PERCENT_LINE_RATE;
                    }
                }
                leaf bps {
                    when "../rate-type = BPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in bits per second.";
                }
                leaf kbps {
                    when "../rate-type = KBPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in kilo bits per second.";
                }
                leaf mbps {
                    when "../rate-type = MBPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in mega bits per second.";
                }
                leaf fps {
                    when "../rate-type = FRAMES_PER_SECOND";
                    default "1014";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in frames per second.";
                }
                leaf percent-value {
                    when "../rate-type = PERCENT_LINE_RATE";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in percent.";
                }
                leaf count {
                    type int32;
                    description
                    "Maximum increment value for frame length";
                }
                leaf step {
                    type int32;
                    description
                    "Step increment value for frame length";
                }
            }
            container increment-rate {
                when "../mode = INCREMENT";
                leaf rate-type {
                    description
                    "Load unit applied to the stream block.";
                    type enumeration {
                        enum BPS;
                        enum KBPS;
                        enum MPBS;
                        enum FRAMES_PER_SECOND;
                        enum PERCENT_LINE_RATE;
                    }
                }
                leaf bps {
                    when "../rate-type = BPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in bits per second.";
                }
                leaf kbps {
                    when "../rate-type = KBPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in kilo bits per second.";
                }
                leaf mbps {
                    when "../rate-type = MBPS";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in mega bits per second.";
                }
                leaf fps {
                    when "../rate-type = FRAMES_PER_SECOND";
                    default "1014";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in frames per second.";
                }
                leaf percent-value {
                    when "../rate-type = PERCENT_LINE_RATE";
                    default "1024000";
                    type int32;
                    description
                    "Load value set on the streamblock/traffic-item in percent.";
                }
                leaf count {
                    type int32;
                    description
                    "Maximum increment value for frame length";
                }
                leaf step {
                    type int32;
                    description
                    "Step increment value for frame length";
                }
            }
        }
        
        container packet-payload {
            leaf payload-type {
                type enumeration {
                    enum INCREMENT_BYTE;
                    enum DECREMENT_BYTE;
                    enum INCREMENT_WORD;
                    enum DECREMENT_WORD;
                    enum CUSTOM;
                }
            }
            container payload {
                leaf data {
                    when "../payload-type = CUSTOM";
                    type iyt:hex-string;
                    default "00";
                }
                leaf repeat {
                    description "Repeat the payload data to fill the length specified";
                    type boolean;
                    default "false";
                }
                leaf length {
                    type int32;
                    default 0;
                }
            }
        }
	}
}
