submodule openhltest-device-groups {

	yang-version "1.1";
	belongs-to "openhltest" {
		prefix "oht";
	}

	import openhltest-types {
		prefix t;
	}
	include openhltest-ports;
	include openhltest-ethernet;
	include openhltest-vlan;
	include openhltest-ipv4;
	include openhltest-ipv6;
    include openhltest-bfd;
	include openhltest-bgpv4;
	include openhltest-bgpv6;
	include openhltest-ospfv2;
	include openhltest-ospfv3;
	include openhltest-isisv4;
	include openhltest-isisv6;

	include openhltest-bgpv4-route-range;
	include openhltest-bgpv6-route-range;
    include openhltest-ospfv2-route-range;
    include openhltest-ospfv3-route-range;
    include openhltest-isisv4-route-range;
    include openhltest-isisv6-route-range;
    
	organization
	"OpenHlTest working group";
	contact
	"OpenHlTest working group";
	description
	"This module describes a collection of emulated networks.";

	revision 2018-02-09 {
		description
		  "Initial revision.";
		reference
		  "0.0.1";
	}

	grouping device-group-top {
		description
		"A grouping of device-groups, devices and protocols.";

		list device-groups {
			key "name";
			description
			"A list of device-groups.
			Each device-groups object can contain 0..n devices.";

			leaf name {
				type t:config-list-key;
				description
				"The unique name of a device-groups object.";
			}
			leaf-list ports {
				description 
				"A list of abstract test port names. 
				Every object in the devices and protocols lists will share the ports assigned to a device-groups object.
				An abstract test port name cannot be assigned to more than one device-groups object.";
				type leafref {
					path "../../ports/name";
				}
			}

			list devices {
				description 
				"A list of devices. 
				Each devices object can contain 0..n protocols objects";
				
				key "name";
				leaf name {
					type t:config-list-key;
					description
					"The unique name of a devices object.";
				}
				leaf device-count-per-port {
					description "The number of devices that will be created on each
					abstract test port specified in the port-names list.";
					type uint32;
					default "1";
				}
				leaf parent-link {
					description
					"Identifies which devices object or simulated-networks object is connected to this object.
					This is used to create a devices container behind a devices or simulated networks container.
					An empty link indicates that the object is at the top of the stack.";
					mandatory true;
					type union {
						type leafref {
							path "../name";
						}
						type leafref {
							path "../../simulated-networks/name";
						}
						type empty;
					}
				}
				list protocols {
					description "A list of emulated protocols.
					Each emulated protocols object is a container for one and only one of the emulated protocol types.
					The protocol-type is used to specify what type of protocol is contained in a protocols object.";

					key "name";
					leaf "name" {
						type t:config-list-key;
						description "The unique name of a protocols object";
					}
					leaf parent-link {
						description "Identifies which protocols object is the parent of this protocol.
						This link only applies to protocol objects in one container.
						The link can be used to specify a vertical or horizontal relationship.
						To specify the first protocols object in a stack the value must be empty.";
						mandatory true;
						type union {
							type leafref {
								path "../name";
							}
							type empty;
						}
					}
					leaf flow-link {
						description
						"Identifies which object in another container is the next hop from this container.
						The name cannot be one of the names in this devices container.
						An empty link indicates no flow link";
						mandatory true;
						type union {
							type leafref {
								path "../name";
							}
							type leafref {
								path "../../simulated-networks/name";
							}
							type empty;
						}
					}
					leaf protocol-type {
						description "Determines which detailed emulated protocol container is active.";
						mandatory true;
						type enumeration {
							enum ETHERNET;
							enum VLAN;
							enum IPV4;
                            enum IPV6;
							enum BGPV4;
                            enum BGPV6;
                            enum OSPFV2;
                            enum OSPFV3;
                            enum ISISV4;
                            enum ISISV6;
                            enum BFDV4;
                            enum BFDV6;
						}
					}
					uses ethernet-group {
						description "The conditional container for detailed ethernet information";
						when "../protocol-type = ETHERNET";
					}
					uses vlan-group {
						description "The conditional container for detailed vlan information"; 
						when "../protocol-type = VLAN";
					}
					uses ipv4-group {
						description "The conditional container for detailed ipv4 information"; 
						when "../protocol-type = IPV4";
					}
					uses ipv6-group {
						description "The conditional container for detailed ipv6 information"; 
						when "../protocol-type = IPV6";
					}
					uses bgpv4-group {
						description "The conditional container for detailed bgpv4 information"; 
						when "../protocol-type = BGPV4";
					}
					uses bgpv6-group {
						description "The conditional container for detailed bgpv6 information"; 
						when "../protocol-type = BGPV6";
					}
					uses ospfv2-group {
						description "The conditional container for detailed ospfv2 information"; 
						when "../protocol-type = OSPFV2";
					}
					uses ospfv3-group {
						description "The conditional container for detailed ospfv3 information"; 
						when "../protocol-type = OSPFV3";
					}
					uses isisv4-group {
						description "The conditional container for detailed isis v4 information"; 
						when "../protocol-type = ISISV4";
					}
					uses isisv6-group {
						description "The conditional container for detailed isis v6 information"; 
						when "../protocol-type = ISISV6";
					}
					uses bfdv4-group {
						description "The conditional container for detailed bfd v4 information"; 
						when "../protocol-type = BFDV4";
					}
					uses bfdv6-group {
						description "The conditional container for detailed bfd v6 information"; 
						when "../protocol-type = BFDV6";
					}
				}
			}

			list simulated-networks {
				description 
				"A list of simulated networks. 
				Each simulated networks object can contain 0..n networks objects";
				key "name";
				leaf name {
					type t:config-list-key;
					description
					"The unique name of the simulated-networks object.";
				}
				leaf network-count-per-port {
					description 
					"The number of devices that will be created on each
					abstract test port specified in the port-names list.";
					type uint32;
					default "1";
				}
				leaf parent-link {
					description 
					"Identifies which devices object or simulated-networks object is connected to this object.
					This is used to create a simulated netwworks container behind a devices or simulated networks container.";
					mandatory true;
					type union {
						type leafref {
							path "../name";
						}
						type leafref {
							path "../../device-groups/devices/name";
						}
					}
				}
				list networks {
					description "A list of emulated networks.
					Each emulated networks object is a container for one and only one of the emulated network types.
					The network-type is used to specify what type of network is contained in a networks object.";
					
					key "name";
					leaf name {
						type t:config-list-key;
						description
						"The unique name of the networks object.";
					}
					leaf flow-link {
						description
						"Identifies which object in another container is the next hop from this networks object.
						The name cannot be one of the names in this networks container.
						An empty link indicates no flow link";
						mandatory true;
						type union {
							type leafref {
								path "../name";
							}
							type leafref {
								path "../../device-groups/devices/protocols/name";
							}
							type empty;
						}
					}
					uses bgpv4-route-range-group {
						description "The conditional container for detailed bgpv4 route range information"; 
						when "../../device-groups/devices/protocols/protocol-type == BGPV4";
					}
					uses bgpv6-route-range-group {
						description "The conditional container for detailed bgpv6 route range information"; 
						when "../../device-groups/devices/protocols/protocol-type == BGPV6";
					}
					uses ospfv2-route-range-group {
						description "The conditional container for detailed ospfv2 router LSA range information"; 
						when "../../device-groups/devices/protocols/protocol-type == OSPFV2";
					}
					uses ospfv3-route-range-group {
						description "The conditional container for detailed ospfv3 router LSA range information"; 
						when "../../device-groups/devices/protocols/protocol-type == OSPFV3";
					}
					uses isisv4-route-range-group {
						description "The conditional container for detailed isis v4 routes information"; 
						when "../../device-groups/devices/protocols/protocol-type == ISISV4";
					}
					uses isisv6-route-range-group {
						description "The conditional container for detailed isis v6 routes information"; 
						when "../../device-groups/devices/protocols/protocol-type == ISISV6";
					}
				}
			}
		}

		action create-bgpv4 {
			input {
				leaf device-group-name {
					mandatory true;
					type string;
				}
				leaf device-name {
					mandatory true;
					type string;
				}
				uses ethernet-group {
					augment ethernet {
						leaf name {
							mandatory true;
							type string;
						}
					}
				}
				uses vlan-group {
					augment vlan {
						leaf name {
							mandatory true;
							type string;
						}
					}					
				}
				uses ipv4-group {
					augment ipv4 {
						leaf name {
							mandatory true;
							type string;
						}
					}
				}
				uses bgpv4-group {
					augment bgpv4 {
						leaf name {
							mandatory true;
							type string;
						}
					}
				}
			}
		}
		action start-protocols {
			description
			"Start one or more emulated protocol groups.
			An empty list signifies that all protocol groups will be started.";

			input {
				leaf-list protocol-names {
					description "A list of protocol group names";
					type string;
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
		action stop-protocols {
			description
			"Stop one or more protocol groups. 
			An empty list signifiels that all protocol groups will be stopped.";

			input {
				leaf-list protocol-names {
					description "A list of protocol group names";
					type string;
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to stop.
					An empty list signifies that all protocol groups successfully stopped.";
				}
			}
		}
		action bgpv4-control {
			description
			"Start one or more emulated BGPV4 protocol groups.
			An empty list signifies that all BGPV4 protocol groups will be started.";

			input {
				leaf-list bgpv4-protocol-names {
					description "A list of BGPV4 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                        enum LINK_FLAP;
                        enum RESTART;
                        enum ADVERTISE;
                        enum WITHDRAW;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
        
		action bgpv6-control {
			description
			"Start one or more emulated BGPV6 protocol groups.
			An empty list signifies that all BGPV6 protocol groups will be started.";

			input {
				leaf-list bgpv6-protocol-names {
					description "A list of BGPV6 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                        enum LINK_FLAP;
                        enum RESTART;
                        enum ADVERTISE;
                        enum WITHDRAW;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
        
		action ospfv2-control {
			description
			"Start one or more emulated OSPFV2 protocol groups.
			An empty list signifies that all OSPFV2 protocol groups will be started.";

			input {
				leaf-list ospfv2-protocol-names {
					description "A list of OSPFV2 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                        enum LINK_FLAP;
                        enum RESTART;
                        enum ADVERTISE;
                        enum WITHDRAW;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
        
		action ospfv3-control {
			description
			"Start one or more emulated OSPFV3 protocol groups.
			An empty list signifies that all OSPFV3 protocol groups will be started.";

			input {
				leaf-list ospfv3-protocol-names {
					description "A list of OSPFV3 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                        enum LINK_FLAP;
                        enum RESTART;
                        enum ADVERTISE;
                        enum WITHDRAW;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
        
		action isisv4-control {
			description
			"Start one or more emulated ISIS v4 protocol groups.
			An empty list signifies that all ISIS v4 protocol groups will be started.";

			input {
				leaf-list isisv4-protocol-names {
					description "A list of ISIS v4 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                        enum LINK_FLAP;
                        enum RESTART;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}

		action isisv6-control {
			description
			"Start one or more emulated ISIS v6 protocol groups.
			An empty list signifies that all ISIS v6 protocol groups will be started.";

			input {
				leaf-list isisv6-protocol-names {
					description "A list of ISIS v6 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                        enum LINK_FLAP;
                        enum RESTART;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}

		action bfdv4-control {
			description
			"Start one or more emulated BFD v4 protocol groups.
			An empty list signifies that all BFD v4 protocol groups will be started.";

			input {
				leaf-list bfdv4-protocol-names {
					description "A list of ISIS v4 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
        
		action bfdv6-control {
			description
			"Start one or more emulated BFD v6 protocol groups.
			An empty list signifies that all BFD v6 protocol groups will be started.";

			input {
				leaf-list bfdv6-protocol-names {
					description "A list of ISIS v6 protocol device names";
					type string;
				}
				leaf mode {
					description "Specifies the action to be taken.";
					type enumeration {
                        enum START;
                        enum STOP;
                    }
                    default "START";
				}
			}
			output {
				uses t:errata-group {
					description "A list of protocol group resources that failed to start.
					An empty list signifies that all protocol groups successfully started.";
				}
			}
		}
        
	}
}
